service: blob-images-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: eu-central-1

  environment:
    photoTable: blob-images-photos
    photoIndex: SK-PK-idx
    messageTable: blob-images-messages

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"

functions:
  createPhoto:
    handler: handlersPhoto/createPhoto.main
    events:
      - s3:
          bucket: blob-images
          event: s3:ObjectCreated:*
          rules:
            - prefix: protected/
          existing: true
  createGroup:
    handler: handlersGroup/createGroup.main
    events:
      - http:
          path: groups
          method: post
          cors: true
          authorizer: aws_iam
  createUser:
    handler: handlersUser/createUser.main
    events:
      - http:
          path: users
          method: post
          cors: true
          authorizer: aws_iam
  getUser:
    handler: handlersUser/getUser.main
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          authorizer: aws_iam
  updateUser:
    handler: handlersUser/updateUser.main
    events:
      - http:
          path: users
          method: put
          cors: true
          authorizer: aws_iam
  getPhoto:
    handler: handlersPhoto/getPhoto.main
    events:
      - http:
          path: photos/{id}
          method: get
          cors: true
          authorizer: aws_iam
  listPhotos:
    handler: handlersPhoto/listPhotos.main
    events:
      - http:
          path: photos
          method: get
          cors: true
          authorizer: aws_iam

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}